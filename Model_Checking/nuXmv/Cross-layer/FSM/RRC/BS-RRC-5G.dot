digraph UE{
rankdir = LR;
size = "8,5"
node [shape = circle, label="gnb_rrc_idle"]gnb_rrc_idle;
node [shape = circle, label="gnb_rrc_inactive"]gnb_rrc_inactive;
node [shape = circle, label="gnb_rrc_wait_for_setup_req"]gnb_rrc_wait_for_setup_req;
node [shape = circle, label="gnb_rrc_wait_for_resume_req"]gnb_rrc_wait_for_resume_req;
node [shape = circle, label="gnb_rrc_connected"]gnb_rrc_connected;
node [shape = circle, label="gnb_rrc_wait_for_setup_complete"]gnb_rrc_wait_for_setup_complete;
node [shape = circle, label="gnb_rrc_wait_for_reconf_complete"]gnb_rrc_wait_for_reconf_complete;
node [shape = circle, label="gnb_rrc_wait_for_resume_complete"]gnb_rrc_wait_for_resume_complete;
node [shape = circle, label="gnb_rrc_wait_for_reestab_complete"]gnb_rrc_wait_for_reestab_complete;

//initial_state: gnb_rrc_idle
//incoming messages: rrc_setup_req; rrc_setup_complete; rrc_sm_complete; rrc_sm_failure; rrc_reconf_complete; rrc_reestab_req; rrc_reestab_complete; ul_info_transfer; rrc_resume_req; rrc_resume_complete; ue_cap_info; ul_user_data
//outgoing messages: null_action; rrc_release; rrc_reject; rrc_setup; rrc_release_suspend; rrc_sm_command; rrc_reconf; rrc_reestab; rrc_resume; paging_tmsi; paging_irnti; dl_info_transfer; rrc_resume; ue_cap_enquiry; dl_user_data
//environment variables: gnb_bearer_setup_required; paging_timer_expired; as_sec_ctx_setup_required; rrc_smcomplete_mac_failure; dl_info_transfer_required; ulinfotransfer_mac_failure; idle_mode_required; resumereq_mac_failure; rrc_suspend_required; resumecomplete_mac_failure; reconf_complete_mac_failure; ue_cap_required; reestabreq_mac_failure; reestabcomplete_mac_failure; dl_data_transfer_required
//state variables: gnb_rrc_sec_ctx_exist{true, false}<false>; paging_sent{true, false}<false>; gnb_bearer_established{true, false}<false>; gnb_rrc_sec_ctx_updated{true, false}<false>;chan_AMF_rrc_nas{AMF_ul_info_transfer, null}<null>; chan_AMF_nas_rrc{AMF_dl_info_transfer, AMF_paging_requested, AMF_ctx_release_requested, null}<null>
//sequence variables: gnb_pdcp_ul_count {0, 32}<0, ((gnb_pdcp_ul_count + 1) mod 32)>; gnb_pdcp_dl_count {0, 32}<0, ((gnb_pdcp_dl_count + 1) mod 32)> 

gnb_rrc_idle -> gnb_rrc_wait_for_setup_complete [label = "rrc_setup_req / rrc_setup, gnb_rrc_sec_ctx_exist=false"]
gnb_rrc_idle -> gnb_rrc_wait_for_setup_req [label = "chan_AMF_nas_rrc = AMF_paging_requested / paging_tmsi, paging_sent=true, chan_AMF_nas_rrc = null"]


gnb_rrc_wait_for_setup_req -> gnb_rrc_wait_for_setup_req [label = "paging_sent & paging_timer_expired / 
    paging_tmsi, paging_sent=true"]
//TODO: DO NOT KNOW THE BEHAVIOR FOR THESE
//gnb_rrc_wait_for_setup_req >> gnb_rrc_wait_for_setup_req [label = "rrc_resume_req / _"] //TODO: DO NOT KNOW
//gnb_rrc_wait_for_setup_req >> gnb_rrc_wait_for_setup_req [label = "rrc_sm_complete / _"] //TODO: DO NOT KNOW
//gnb_rrc_wait_for_setup_req >> gnb_rrc_wait_for_setup_req [label = "rrc_reestab_complete / _"] //TODO: DO NOT KNOW
//gnb_rrc_wait_for_setup_req >> gnb_rrc_wait_for_setup_req [label = "rrc_reconf_complete / _"] //TODO: DO NOT KNOW


gnb_rrc_wait_for_setup_complete -> gnb_rrc_wait_for_setup_complete [label = "rrc_setup_req / rrc_setup, 
    gnb_rrc_sec_ctx_exist=false, paging_sent=false"]
gnb_rrc_wait_for_setup_complete -> gnb_rrc_connected [label = "rrc_setup_complete / _"]

//TODO: DO NOT KNOW THE BEHAVIOR FOR THESE
//gnb_rrc_wait_for_setup_complete >> gnb_rrc_wait_for_setup_complete [label = "rrc_resume_req /_"]//TODO:
//gnb_rrc_wait_for_setup_complete >> gnb_rrc_wait_for_setup_complete [label = "rrc_sm_complete /_"]//TODO:
//gnb_rrc_wait_for_setup_complete >> gnb_rrc_wait_for_setup_complete [label = "rrc_reestab_complete /_"]//TODO:
//gnb_rrc_wait_for_setup_complete >> gnb_rrc_wait_for_setup_complete [label = "rrc_reconf_complete /_"]//TODO:


gnb_rrc_connected -> gnb_rrc_wait_for_setup_complete [label = "rrc_setup_req/rrc_setup, gnb_rrc_sec_ctx_exist=false, 
    paging_sent=false"] //TODO: Ignore?
gnb_rrc_connected -> gnb_rrc_idle [label="chan_AMF_nas_rrc=AMF_ctx_release_requested/rrc_release, chan_AMF_nas_rrc=null"]    
gnb_rrc_connected -> gnb_rrc_inactive [label="rrc_suspend_required /rrc_release_suspend"]
gnb_rrc_connected->gnb_rrc_connected [label = "as_sec_ctx_setup_required / rrc_sm_command"]
gnb_rrc_connected->gnb_rrc_connected [label = "rrc_sm_complete & !rrc_smcomplete_mac_failure / gnb_rrc_sec_ctx_exist=true,
    gnb_rrc_sec_ctx_updated=true"] //TODO: Need to model the data:
gnb_rrc_connected->gnb_rrc_connected [label = "rrc_sm_complete & rrc_smcomplete_mac_failure / gnb_rrc_sec_ctx_updated=false"] //TODO: old gnb_rrc_sec_ctx will be in use
gnb_rrc_connected -> gnb_rrc_wait_for_reconf_complete [label = "gnb_bearer_setup_required / rrc_reconf, 
    gnb_bearer_established=true, gnb_pdcp_ul_count=0, gnb_pdcp_dl_count=0"]
gnb_rrc_connected -> gnb_rrc_connected [label = "chan_AMF_nas_rrc = AMF_dl_info_transfer / dl_info_transfer, chan_AMF_nas_rrc = null"]
gnb_rrc_connected -> gnb_rrc_connected [label = "ul_info_transfer & ulinfotransfer_mac_failure/ chan_AMF_rrc_nas = AMF_ul_info_transfer"]
gnb_rrc_connected -> gnb_rrc_connected [label = "ul_info_transfer & !ulinfotransfer_mac_failure / _"] 
gnb_rrc_connected -> gnb_rrc_connected [label = "ue_cap_required / ue_cap_enquiry"]
gnb_rrc_connected -> gnb_rrc_connected [label = "ue_cap_info / _ "]
gnb_rrc_connected -> gnb_rrc_wait_for_reestab_complete [label = "rrc_reestab_req 
    & gnb_rrc_sec_ctx_exist & !reestabreq_mac_failure /rrc_reestab"] 
gnb_rrc_connected -> gnb_rrc_wait_for_setup_complete [label = "rrc_reestab_req & 
    (!gnb_rrc_sec_ctx_exist | reestabreq_mac_failure)  / rrc_setup, gnb_rrc_sec_ctx_exist=false"] 
gnb_rrc_connected -> gnb_rrc_connected [label = "gnb_bearer_established &  dl_data_transfer_required
      / dl_user_data, gnb_pdcp_dl_count = ((gnb_pdcp_dl_count + 1) mod 32)"]
gnb_rrc_connected -> gnb_rrc_connected [label = "gnb_bearer_established &  ul_user_data
      / gnb_pdcp_ul_count = ((gnb_pdcp_ul_count + 1) mod 32)"]        

//TODO: rrc_reestablish_req, rrc_reestablish, rrc_reestablish_complete, rrc_reestablish_reject
// rrc_reestablish_req has integrity (i.e., MAC)

//TODO: DO NOT KNOW THE BEHAVIOR FOR THESE
//gnb_rrc_connected >> gnb_rrc_connected [label = "rrc_setup_complete / _"] //TODO: DO NOT KNOW
//gnb_rrc_connected >> gnb_rrc_connected [label = "rrc_resume_req /_"]//TODO: DO NOT KNOW
//gnb_rrc_connected >> gnb_rrc_connected [label = "rrc_sm_complete /_"]//TODO: DO NOT KNOW
//gnb_rrc_connected >> gnb_rrc_connected [label = "rrc_reestab_complete /_"]//TODO: DO NOT KNOW
//gnb_rrc_connected >> gnb_rrc_connected [label = "rrc_reconf_complete /_"]//TODO: DO NOT KNOW


gnb_rrc_inactive -> gnb_rrc_idle [label="chan_AMF_nas_rrc=AMF_ctx_release_requested/rrc_release, chan_AMF_nas_rrc=null"]
gnb_rrc_inactive -> gnb_rrc_inactive [label="rrc_resume_req & (!gnb_rrc_sec_ctx_exist | resumereq_mac_failure) / rrc_setup"]
gnb_rrc_inactive -> gnb_rrc_wait_for_resume_complete [label="rrc_resume_req & gnb_rrc_sec_ctx_exist & !resumereq_mac_failure /
    rrc_resume, paging_sent=false"]
gnb_rrc_inactive -> gnb_rrc_idle [label="rrc_resume_req & gnb_rrc_sec_ctx_exist & resumereq_mac_failure /
    rrc_reject"]
gnb_rrc_inactive -> gnb_rrc_inactive [label="rrc_resume_req & rrc_suspend_required / rrc_release_suspend"]
gnb_rrc_inactive -> gnb_rrc_wait_for_resume_req [label="chan_AMF_nas_rrc = AMF_paging_requested / paging_irnti, paging_sent=true, 
    chan_AMF_nas_rrc = null"]


gnb_rrc_wait_for_resume_req -> gnb_rrc_idle [label="chan_AMF_nas_rrc=AMF_ctx_release_requested/rrc_release, chan_AMF_nas_rrc=null"]
gnb_rrc_wait_for_resume_req -> gnb_rrc_wait_for_setup_req [label = "paging_timer_expired / paging_irnti, paging_sent=true"]
gnb_rrc_wait_for_resume_req -> gnb_rrc_wait_for_setup_complete [label = "rrc_resume_req & 
    (!gnb_rrc_sec_ctx_exist | resumereq_mac_failure)/ rrc_setup, gnb_rrc_sec_ctx_exist=false"] //TOOD: double check if the ctx becomes false
gnb_rrc_wait_for_resume_req -> gnb_rrc_wait_for_resume_complete [label = "rrc_resume_req & 
    gnb_rrc_sec_ctx_exist & !resumereq_mac_failure / rrc_resume, paging_sent=false"]
gnb_rrc_wait_for_resume_req -> gnb_rrc_wait_for_setup_complete [label = "rrc_resume_req & 
    gnb_rrc_sec_ctx_exist & resumereq_mac_failure / rrc_reject, paging_sent=false"]
gnb_rrc_wait_for_resume_req -> gnb_rrc_wait_for_setup_complete [label = "rrc_setup_req / rrc_setup, 
    gnb_rrc_sec_ctx_exist=false, paging_sent=false"] //TOOD: double check if the ctx becomes false


gnb_rrc_wait_for_resume_complete -> gnb_rrc_idle [label="chan_AMF_nas_rrc=AMF_ctx_release_requested/rrc_release, chan_AMF_nas_rrc=null"]
gnb_rrc_wait_for_resume_complete -> gnb_rrc_connected [label = "rrc_resume_complete & 
    gnb_rrc_sec_ctx_exist & !resumecomplete_mac_failure / _"]
gnb_rrc_wait_for_resume_complete -> gnb_rrc_connected [label = "rrc_resume_complete & 
    (!gnb_rrc_sec_ctx_exist | resumecomplete_mac_failure) / _"] //TODO: double check: Is there any vulnerability due to this 

gnb_rrc_wait_for_reestab_complete -> gnb_rrc_idle [label="chan_AMF_nas_rrc=AMF_ctx_release_requested/rrc_release, chan_AMF_nas_rrc=null"]
gnb_rrc_wait_for_reestab_complete -> gnb_rrc_connected [label = "rrc_reestab_complete 
    & gnb_rrc_sec_ctx_exist & !resumecomplete_mac_failure / _"]
gnb_rrc_wait_for_reestab_complete -> gnb_rrc_connected [label = "rrc_reestab_complete & 
    (!gnb_rrc_sec_ctx_exist | resumecomplete_mac_failure) / _"] //TODO: double check: Is there any vulnerability due to this 

gnb_rrc_wait_for_reconf_complete -> gnb_rrc_idle [label="chan_AMF_nas_rrc=AMF_ctx_release_requested/rrc_release, chan_AMF_nas_rrc=null"]
gnb_rrc_wait_for_reconf_complete -> gnb_rrc_connected [label = "rrc_reconf_complete & 
    !reconf_complete_mac_failure/gnb_bearer_established=true, gnb_pdcp_ul_count = 0, gnb_pdcp_dl_count=0"]
gnb_rrc_wait_for_reconf_complete -> gnb_rrc_connected [label = "rrc_reconf_complete & 
    (!gnb_rrc_sec_ctx_exist | reconf_complete_mac_failure ) /_"] //TODO: Is there any vulnerability due to this
}


